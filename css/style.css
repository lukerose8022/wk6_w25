/* Identify the class of the grid container and, in your stylesheet, set up the grid
Set the display to grid
Create a responsive grid with 3 columns that each take up 1/3 of the screen */
.grid {
     display: grid;
    grid-template-columns: 2% 3% 90% 3% 2%;
}

/* All the images are different sizes! Use CSS to make the grid images 90% of the size of their grid container
Hint: There is also an image on the page that is not part of the grid, you have to be more specific than just styling img
Change the height and width of images to 90%
Give images 5px of padding */

.grid img {
    width: 100%;
    height: auto;
    padding: 5px;
    grid-column: 3;
    grid-row: auto;
}



/* .grid img:nth-child(even) {
    border: 5px orange dashed;
} */

/* Style the last image to span across all three rows 
Hint: use the css panel within inspect element and follow the breadcrumbs to target a specific image.   */

/* .item7
    {
        grid-column: 1 / -1;
    } */

/* Style the first image
Give the first image a solid green border of 5px 
Add 10px of padding
Is this rule being overridden? Open inspect element to see which of your styling rules is taking priority  */

/* .item1 {
    border: 5px solid green;
    padding: 10px;
} */

/* Create a 5-column responsive grid:
The middle column should be 90% wide (for content).
The outer columns should each be 2% wide (as margins).
The two inner columns should each be 3% wide (as padding). */
